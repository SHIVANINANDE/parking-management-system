version: '3.8'

services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:15-3.4
    container_name: parking_postgres
    environment:
      POSTGRES_DB: parking_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGIS_VERSION: 3.4
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - parking_network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: parking_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - parking_network

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: parking_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - parking_network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: parking_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - parking_network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: parking_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - parking_network

  # FastAPI Backend
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: parking_backend
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/parking_db
      REDIS_URL: redis://redis:6379
      ELASTICSEARCH_URL: http://elasticsearch:9200
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - kafka
    volumes:
      - ../backend:/app
    networks:
      - parking_network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  kafka_data:

networks:
  parking_network:
    driver: bridge